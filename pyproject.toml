[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-ai-testing-framework"
version = "1.0.0"
description = "Autonomous testing framework powered by Agentic AI and Model Context Protocol"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["testing", "ai", "automation", "mcp", "agentic-ai", "playwright"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "playwright>=1.40.0",
    "pytest>=7.4.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "jinja2>=3.1.0",
    "structlog>=23.2.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
dashboard = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]

[project.scripts]
mcp-test = "cli:cli"

[project.urls]
Homepage = "https://github.com/yourusername/mcp-ai-testing-framework"
Documentation = "https://github.com/yourusername/mcp-ai-testing-framework/docs"
Repository = "https://github.com/yourusername/mcp-ai-testing-framework"
Issues = "https://github.com/yourusername/mcp-ai-testing-framework/issues"

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
    "unit: marks tests as unit tests",
]